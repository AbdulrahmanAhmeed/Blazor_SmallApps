@page "/"
@using System.Text
@inject IJSRuntime js
@inject HttpClient Http
@inject ILogger<Index> log

<PageTitle>Weather Forecast</PageTitle>
<div class="alert alert-info">
    Bootstrap is installed!
</div>
@if (forecast == null)
{
    <p><em>@message</em></p>
}
else
{
    <div class="card-group">
     @foreach (var item in forecast.Daily.Take(5))
     {
     <DailyForecast
     Seconds="@item.Dt"
     LowTemp="@item.Temp.Min"
     HighTemp="@item.Temp.Max"
     Description="@item.Weather[0].Description"
     Icon="@item.Weather[0].Icon" />
     }
     </div>
}


@code {
    OpenWeather? forecast;
    string message = "Loading...";
    Position? pos;
    protected override async Task OnInitializedAsync()
    {
        try
        {
            await GetPositionAsync();
            await GetForecastAsync();
        }
        catch (Exception)
        {
            message = "Geolocation is not supported.";
        };
    }
    private async Task GetPositionAsync()
    {
        pos = await js.InvokeAsync<Position>(
        "bweInterop.getPosition");
    }

    private async Task GetForecastAsync()
    {
        
        if (pos != null)
        {
            
            forecast = await Http.GetFromJsonAsync<OpenWeather>("sample-data/weather.json");
            foreach (var item in forecast.Daily.Take(5))
                log.LogInformation(string.Format($"{item.Temp.Min}"));
            
        }
    }

}